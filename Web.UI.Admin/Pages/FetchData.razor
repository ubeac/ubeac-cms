@page "/fetchdata"
@using Web.UI.Admin.ApiClients;
@using Web.UI.Admin.Data
@inject WeatherForecastService ForecastService
@inject ContentTypeClient Client

<PageTitle>Weather forecast</PageTitle>

<h1>Content Types</h1>
@if (contentTypes == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>SiteId</th>
                <th>CreateBy</th>
                <th>CreateDate</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var contentType in contentTypes)
            {
                <tr>
                    <td>@contentType.Id</td>
                    <td>@contentType.Name</td>
                    <td>@contentType.SiteId</td>
                    <td>@contentType.CreateBy</td>
                    <td>@contentType.CreateDate.ToString()</td>
                </tr>
            }
        </tbody>
    </table>
}


@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private WeatherForecast[]? forecasts;
    private ICollection<ApiClients.ContentType>? contentTypes;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await ForecastService.GetForecastAsync(DateOnly.FromDateTime(DateTime.Now));
        contentTypes = await Client.GetAllAsync();
    }
}
